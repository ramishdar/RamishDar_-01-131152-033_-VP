<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        s/8AeI921kI3+IAAAAAASUVORK5CYII=
</value>
  </data>
</root>